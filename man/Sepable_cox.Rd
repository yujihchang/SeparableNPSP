% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sepable_cox.R
\name{Sepable_cox}
\alias{Sepable_cox}
\title{Separable Effects via Cox Proportional Hazards under (Semi)Competing Risks}
\usage{
Sepable_cox(
  p.time,
  z.level,
  data,
  setting = "median",
  level = NULL,
  type = "SP"
)
}
\arguments{
\item{p.time}{A numeric vector of time points at which to evaluate separable-effect
curves (e.g., \code{seq(0, 1.5, by = 0.01)}).}

\item{z.level}{A length-2 vector giving the exposure levels to contrast, e.g.
\code{c(0, 1)}. The first element is treated as \eqn{z_1}, the second as \eqn{z_2}.}

\item{data}{A data frame (or matrix) with required columns:
\itemize{
  \item \code{X1}: observed intermediate event time.
  \item \code{X2}: observed primary (terminal) event time.
  \item \code{D1}: indicator for the intermediate event (1 = occurred, 0 otherwise).
  \item \code{D2}: indicator for the primary event (1 = occurred, 0 otherwise).
  \item \code{S}: exposure indicator (will be compared using \code{z.level}).
  \item \code{covariate} (optional): additional baseline covariates; if present,
        it should be a matrix-like column (e.g., a list-column or a matrix in the
        environment) that the function treats as extra regressors.
}}

\item{setting}{Reference-covariate setting for counterfactual risk evaluation.
One of \code{"median"} (default), \code{"center"} (mean), \code{"zero"},
or \code{"user"} (use \code{level}).}

\item{level}{A numeric vector specifying the user-defined covariate reference
when \code{setting = "user"}. Its length should match the number of baseline
covariates used in the Cox models.}

\item{type}{Analysis setting. One of:
\itemize{
  \item \code{"SP"}: semicompeting risks (default). Fits an extra Cox model for the
        transition from \code{X1} to \code{X2} when \code{X2 > X1}.
  \item \code{"CP"}: competing risks (suppresses the semicompeting transition term).
}}
}
\description{
Estimates separable direct and indirect effect curves using a semi-parametric
approach based on Cox proportional hazards models. The procedure fits Cox models
for (i) the intermediate event, (ii) the terminal event (with intermediate events
treated as censoring where appropriate), and, under semicompeting risks,
(iii) the post-intermediate transition. Baseline cumulative hazards are combined
with specified exposure levels and reference covariates to construct cumulative
risks and separable-effect contrasts over \code{p.time}. Pointwise standard errors
are obtained via a delta-method linearization using an observed-information
(sandwich-style) approximation.
}
\details{
Internally the function:
\enumerate{
  \item Fits three Cox models via \pkg{survival}:
  \enumerate{
    \item \emph{Intermediate model} \code{coxph(Surv(X1, D1) ~ S + covariates)}.
    \item \emph{Terminal/competing model} using \code{T02 = ifelse(D1 == 1, X1, X2)}
          and \code{D02 = ifelse(D1 == 1, 0, D2)}.
    \item \emph{Semicompeting transition} \code{coxph(Surv(X1, X2, D1*D2) ~ S + covariates)}
          restricted to \code{X2 > X1} (only if \code{type = "SP"}).
  }
  \item Constructs cumulative hazards and counterfactual components under exposure
        \eqn{z_1} and \eqn{z_2}, evaluated at reference covariates determined by
        \code{setting} (or \code{level} when \code{setting = "user"}).
  \item Aggregates the competing and (if applicable) semicompeting parts to obtain
        cumulative risk functions \eqn{S_{00}}, \eqn{S_{10}}, \eqn{S_{11}}.
  \item Forms separable-effect curves:
        \code{DE = S10 - CountF(z1, z1)} and \code{IE = CountF(z2, z2) - S10},
        where \code{S10 = CountF(z1, z2)}.
  \item Computes pointwise standard errors \code{DE.sd} and \code{IE.sd} by
        propagating uncertainty of regression coefficients and baseline hazards
        through delta-method derivatives accumulated over \code{p.time}.
}
Times in \code{p.time} are on the same scale as \code{X1}/\code{X2}. Make sure
status indicators reflect administrative censoring correctly. When \code{type = "CP"},
the semicompeting transition contribution is set to zero by construction.
}
\value{
A list with components:
\itemize{
  \item \code{DE}: separable direct effect evaluated at \code{p.time}.
  \item \code{IE}: separable indirect effect evaluated at \code{p.time}.
  \item \code{DE.sd}: pointwise SEs for \code{DE}.
  \item \code{IE.sd}: pointwise SEs for \code{IE}.
}
}
\section{Requirements}{
Requires the \pkg{survival} package (for \code{coxph} and \code{Surv}).
}
\examples{
\donttest{
## This example uses an example dataset stored as 'expdata.rda'.
## Recommended placement in a package:
##   - As a file users can load with data():   data/expdata.rda  (object named 'expdata')
##   - As a raw file to read via system.file: inst/extdata/expdata.rda
## The helper below tries both, and falls back to local files if running outside a package.

load_expdata <- function() {
  # 1) Try data(expdata) if shipped as a data object
  ok1 <- tryCatch({ data("expdata", package = "<yourPackageName>"); TRUE }, error = function(e) FALSE)
  if (ok1 && exists("expdata", inherits = FALSE)) {
    return(get("expdata"))
  }
  # 2) Try system.file under inst/extdata
  fp <- tryCatch(system.file("extdata", "expdata.rda", package = "<yourPackageName>"), error = function(e) "")
  if (!is.null(fp) && nzchar(fp) && file.exists(fp)) {
    env <- new.env(parent = emptyenv())
    load(fp, envir = env)
    # Heuristics: prefer object named 'data' or 'expdata'
    nm <- intersect(c("data", "expdata"), ls(env))
    if (length(nm) == 0L) nm <- ls(env)
    return(get(nm[1L], envir = env))
  }
  # 3) Try common local paths when examples are run from the repo
  for (p in c("data/expdata.rda", "inst/extdata/expdata.rda", "expdata.rda")) {
    if (file.exists(p)) {
      env <- new.env(parent = emptyenv())
      load(p, envir = env)
      nm <- intersect(c("data", "expdata"), ls(env))
      if (length(nm) == 0L) nm <- ls(env)
      return(get(nm[1L], envir = env))
    }
  }
  stop("Could not find 'expdata.rda'. Place it under data/ as 'expdata', or under inst/extdata/.")
}

## Load example data into an object named 'data' expected by the example code below.
tmp <- load_expdata()
if (exists("X1", where = tmp, inherits = FALSE)) {
  # If the loaded object is an environment, coerce to data.frame if possible
  data <- as.data.frame(as.list(tmp))
} else if (is.data.frame(tmp)) {
  data <- tmp
} else {
  # If the object was named 'expdata' or 'data' already as a data.frame:
  if (exists("expdata", inherits = FALSE) && is.data.frame(expdata)) data <- expdata
  if (exists("data", inherits = FALSE) && is.data.frame(data)) data <- data
}

## Ensure required columns exist (X1, X2, D1, D2, S). 'covariate' is optional but
## used below to split by its first column.
stopifnot(all(c("X1", "X2", "D1", "D2", "S") %in% names(data)))

## Time grid for evaluating separable-effect curves
P.time <- seq(0, 1.5, by = 0.01)

## Split data by the first covariate being 1 vs 0
## (Adjust if your 'covariate' is stored differently.)
if ("covariate" %in% names(data)) {
  data_1 <- data[data$covariate[, 1] == 1, ]
  data_0 <- data[data$covariate[, 1] == 0, ]
} else {
  ## If no 'covariate' is present, use S as a simple splitter for illustration.
  data_1 <- subset(data, S == 1)
  data_0 <- subset(data, S == 0)
}

## Nonparametric/semi-nonparametric separable effects (IDE-style)
Ans_1 <- SeparatedIDE(P.time, data_1, type = "SP")
Ans_0 <- SeparatedIDE(P.time, data_0, type = "SP")

## Semiparametric separable effects via Cox models.
## 'setting = "user"' + 'level = ...' pins reference covariates explicitly.
Ans.cox_0 <- Sepable_cox(
  p.time   = P.time,
  z.level  = c(0, 1),
  data     = data,
  setting  = "user",
  level    = c(0, 0),
  type     = "SP"
)
Ans.cox_1 <- Sepable_cox(
  p.time   = P.time,
  z.level  = c(0, 1),
  data     = data,
  setting  = "user",
  level    = c(1, 0),
  type     = "SP"
)

## Plot: DE/IE given covariate at level 0 or 1, comparing IDE vs Cox approaches
op <- par(mfrow = c(2, 2))

## --- Plot 1: DE given covariate = 0 ---
## y-axis: DE given covariate at level 0
plot(P.time, Ans_0$DE, type = "s", col = 1,
     xlab = "Time", ylab = "Direct Effect (DE) given covariate = 0",
     main = "DE | covariate = 0")
points(P.time, Ans.cox_0$DE, type = "s", col = 2)
legend("topleft", bty = "n", lty = 1, col = c(1, 2),
       legend = c("SeparatedIDE (nonparametric)", "Separable Cox (semiparametric)"))

## --- Plot 2: IE given covariate = 0 ---
## y-axis: IE given covariate at level 0
plot(P.time, Ans_0$IE, type = "s", col = 1,
     xlab = "Time", ylab = "Indirect Effect (IE) given covariate = 0",
     main = "IE | covariate = 0")
points(P.time, Ans.cox_0$IE, type = "s", col = 2)

## --- Plot 3: DE given covariate = 1 ---
## y-axis: DE given covariate at level 1
plot(P.time, Ans_1$DE, type = "s", col = 1,
     xlab = "Time", ylab = "Direct Effect (DE) given covariate = 1",
     main = "DE | covariate = 1")
points(P.time, Ans.cox_1$DE, type = "s", col = 2)

## --- Plot 4: IE given covariate = 1 ---
## y-axis: IE given covariate at level 1
plot(P.time, Ans_1$IE, type = "s", col = 1,
     xlab = "Time", ylab = "Indirect Effect (IE) given covariate = 1",
     main = "IE | covariate = 1")
points(P.time, Ans.cox_1$IE, type = "s", col = 2)

par(op)
}
}
\keyword{survival}
\keyword{mediation}
\keyword{semiparametric}
\keyword{semicompeting-risks}
\seealso{
\code{\link{SeparatedIDE}}
}
